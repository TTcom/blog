import{_ as t,o as i,c as a,a as n}from"./app.7c722b35.js";const m=JSON.parse('{"title":"Vue项目集成husky","description":"","frontmatter":{},"headers":[{"level":3,"title":"增加  husky和lint-staged","slug":"增加-husky和lint-staged","link":"#增加-husky和lint-staged","children":[]},{"level":3,"title":"如果.git文件和项目文件在一个层级","slug":"如果-git文件和项目文件在一个层级","link":"#如果-git文件和项目文件在一个层级","children":[]},{"level":3,"title":"如果.git文件和项目文件不在一个层级，在父级文件中","slug":"如果-git文件和项目文件不在一个层级-在父级文件中","link":"#如果-git文件和项目文件不在一个层级-在父级文件中","children":[]},{"level":3,"title":"增加需要的钩子文件","slug":"增加需要的钩子文件","link":"#增加需要的钩子文件","children":[]},{"level":3,"title":"注意如果.git文件和项目文件不在一个层级commit-msg文件中需要先打开父级文件","slug":"注意如果-git文件和项目文件不在一个层级commit-msg文件中需要先打开父级文件","link":"#注意如果-git文件和项目文件不在一个层级commit-msg文件中需要先打开父级文件","children":[]},{"level":3,"title":"集成git-cz","slug":"集成git-cz","link":"#集成git-cz","children":[]},{"level":3,"title":"新建 .cz-config.js 文件","slug":"新建-cz-config-js-文件","link":"#新建-cz-config-js-文件","children":[]},{"level":3,"title":"新建 commitlint.config.js 文件","slug":"新建-commitlint-config-js-文件","link":"#新建-commitlint-config-js-文件","children":[]},{"level":3,"title":"集成commit命令","slug":"集成commit命令","link":"#集成commit命令","children":[]},{"level":3,"title":"如果.git文件和项目文件不在一个层级，在父级文件中执行","slug":"如果-git文件和项目文件不在一个层级-在父级文件中执行","link":"#如果-git文件和项目文件不在一个层级-在父级文件中执行","children":[]},{"level":3,"title":"集成提交日志 conventional-changelog-cli","slug":"集成提交日志-conventional-changelog-cli","link":"#集成提交日志-conventional-changelog-cli","children":[]},{"level":3,"title":"根目录下新建 CHANGELOG.md","slug":"根目录下新建-changelog-md","link":"#根目录下新建-changelog-md","children":[]},{"level":3,"title":"配置package.json","slug":"配置package-json","link":"#配置package-json","children":[]},{"level":3,"title":"以上参考文章地址","slug":"以上参考文章地址","link":"#以上参考文章地址","children":[]}],"relativePath":"vue/vue_husky.md"}'),l={name:"vue/vue_husky.md"};function r(c,e,h,o,s,d){return i(),a("div",null,e[0]||(e[0]=[n('<h1 id="vue项目集成husky" tabindex="-1">Vue项目集成husky <a class="header-anchor" href="#vue项目集成husky" aria-hidden="true">#</a></h1><h3 id="增加-husky和lint-staged" tabindex="-1">增加 husky和lint-staged <a class="header-anchor" href="#增加-husky和lint-staged" aria-hidden="true">#</a></h3><p>npm install husky --save-dev 或者使用下面的命令 npx husky-init and npm install yarn add lint-staged --dev</p><h3 id="如果-git文件和项目文件在一个层级" tabindex="-1">如果.git文件和项目文件在一个层级 <a class="header-anchor" href="#如果-git文件和项目文件在一个层级" aria-hidden="true">#</a></h3><p>&quot;prepare&quot;: &quot;husky install&quot;</p><h3 id="如果-git文件和项目文件不在一个层级-在父级文件中" tabindex="-1">如果.git文件和项目文件不在一个层级，在父级文件中 <a class="header-anchor" href="#如果-git文件和项目文件不在一个层级-在父级文件中" aria-hidden="true">#</a></h3><p>&quot;prepare&quot;: &quot;cd .. &amp;&amp; husky install driverhomepage/.husky&quot;</p><h3 id="增加需要的钩子文件" tabindex="-1">增加需要的钩子文件 <a class="header-anchor" href="#增加需要的钩子文件" aria-hidden="true">#</a></h3><p>yarn husky add .husky/pre-commit yarn husky add .husky/post-commit yarn husky add .husky/commit-msg 在对应的钩子文件下面执行对应的命令</p><h3 id="注意如果-git文件和项目文件不在一个层级commit-msg文件中需要先打开父级文件" tabindex="-1">注意如果.git文件和项目文件不在一个层级commit-msg文件中需要先打开父级文件 <a class="header-anchor" href="#注意如果-git文件和项目文件不在一个层级commit-msg文件中需要先打开父级文件" aria-hidden="true">#</a></h3><p>cd my-app npx --no-install commitlint --edit</p><h3 id="集成git-cz" tabindex="-1">集成git-cz <a class="header-anchor" href="#集成git-cz" aria-hidden="true">#</a></h3><p>npm install commitizen -D npx commitizen init cz-customizable -D --save-exact</p><h3 id="新建-cz-config-js-文件" tabindex="-1">新建 .cz-config.js 文件 <a class="header-anchor" href="#新建-cz-config-js-文件" aria-hidden="true">#</a></h3><p>npm i @commitlint/config-conventional @commitlint/cli -D</p><h3 id="新建-commitlint-config-js-文件" tabindex="-1">新建 commitlint.config.js 文件 <a class="header-anchor" href="#新建-commitlint-config-js-文件" aria-hidden="true">#</a></h3><p>npx husky add .husky/commit-msg &quot;npx --no-install commitlint --edit $1&quot;</p><h3 id="集成commit命令" tabindex="-1">集成commit命令 <a class="header-anchor" href="#集成commit命令" aria-hidden="true">#</a></h3><p>&quot;commit&quot;: &quot;git add . &amp;&amp; git-cz&quot;,</p><h3 id="如果-git文件和项目文件不在一个层级-在父级文件中执行" tabindex="-1">如果.git文件和项目文件不在一个层级，在父级文件中执行 <a class="header-anchor" href="#如果-git文件和项目文件不在一个层级-在父级文件中执行" aria-hidden="true">#</a></h3><p>yarn add @commitlint/cli @commitlint/config-conventional cz-customizable -D</p><h3 id="集成提交日志-conventional-changelog-cli" tabindex="-1">集成提交日志 conventional-changelog-cli <a class="header-anchor" href="#集成提交日志-conventional-changelog-cli" aria-hidden="true">#</a></h3><p>npm i conventional-changelog-cli -D</p><h3 id="根目录下新建-changelog-md" tabindex="-1">根目录下新建 <a href="http://CHANGELOG.md" target="_blank" rel="noreferrer">CHANGELOG.md</a> <a class="header-anchor" href="#根目录下新建-changelog-md" aria-hidden="true">#</a></h3><h3 id="配置package-json" tabindex="-1">配置package.json <a class="header-anchor" href="#配置package-json" aria-hidden="true">#</a></h3><p>&quot;log&quot;: &quot;conventional-changelog -p angular -i <a href="http://CHANGELOG.md" target="_blank" rel="noreferrer">CHANGELOG.md</a> -s&quot;</p><h3 id="以上参考文章地址" tabindex="-1">以上参考文章地址 <a class="header-anchor" href="#以上参考文章地址" aria-hidden="true">#</a></h3><p><a href="https://juejin.cn/post/6963048999922171917#heading-13" target="_blank" rel="noreferrer">https://juejin.cn/post/6963048999922171917#heading-13</a><a href="https://blog.csdn.net/Banterise/article/details/115206267" target="_blank" rel="noreferrer">https://blog.csdn.net/Banterise/article/details/115206267</a><a href="https://typicode.github.io/husky/#/?id=monorepo" target="_blank" rel="noreferrer">https://typicode.github.io/husky/#/?id=monorepo</a><a href="https://qdmana.com/2021/04/20210404032516818j.html" target="_blank" rel="noreferrer">https://qdmana.com/2021/04/20210404032516818j.html</a><a href="https://github.com/TTcom/vite-vue-ts" target="_blank" rel="noreferrer">https://github.com/TTcom/vite-vue-ts</a></p>',28)]))}const u=t(l,[["render",r]]);export{m as __pageData,u as default};
