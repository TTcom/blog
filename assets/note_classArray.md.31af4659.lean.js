import{_ as a,o as n,c as l,a as p}from"./app.7c722b35.js";const i=JSON.parse('{"title":"类数组对象","description":"","frontmatter":{},"headers":[],"relativePath":"note/classArray.md"}'),o={name:"note/classArray.md"};function e(t,s,r,c,D,y){return n(),l("div",null,s[0]||(s[0]=[p(`<h1 id="类数组对象" tabindex="-1">类数组对象 <a class="header-anchor" href="#类数组对象" aria-hidden="true">#</a></h1><p>条件</p><ul><li>属性要为数组索引（数字）</li><li>必须有length属性</li><li>最好添加&quot;push&quot;属性 Array.prototype.push</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">任何实现了 Iterator 接口的对象，都可以用扩展运算符转为真正的数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> nodeList </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> array </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">nodeList]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">上面代码中，querySelectorAll方法返回的是一个nodeList对象。它不是数组，而是一个类似数组的对象。这时，扩展运算符可以将其转为真正的数组，原因就在于NodeList对象实现了 Iterator 。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">对于那些没有部署 Iterator 接口的类似数组的对象，扩展运算符就无法将其转为真正的数组。</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arrayLike </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">length</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// TypeError: Cannot spread non-iterable object.</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">arrayLike]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">上面代码中，arrayLike是一个类似数组的对象，但是没有部署 Iterator 接口，扩展运算符就会报错。这时，可以改为使用Array</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">from方法将arrayLike转为真正的数组。</span></span>
<span class="line"><span style="color:#BABED8;">————————————————</span></span>
<span class="line"><span style="color:#BABED8;">原文链接：</span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//blog.csdn.net/qq_24892029/article/details/79215133</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,4)]))}const B=a(o,[["render",e]]);export{i as __pageData,B as default};
